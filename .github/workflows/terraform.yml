name: "Terraform"

on:
  workflow_dispatch:

  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  pull-requests: write
  issues: write

defaults:
  run:
    working-directory: infrastructure
    shell: bash

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    env:
      TF_VAR_compartment_ocid: ${{ secrets.TF_VAR_COMPARTMENT_OCID }}
      TF_VAR_fingerprint: ${{ secrets.TF_VAR_FINGERPRINT }}
      TF_VAR_private_key_path: ${{ secrets.TF_VAR_PRIVATE_KEY_PATH }}
      TF_VAR_user_ocid: ${{ secrets.TF_VAR_USER_OCID }}
      TF_VAR_tenancy_ocid: ${{ secrets.TF_VAR_TENANCY_OCID }}
      TF_VAR_github_runner_token: ${{ secrets.TF_GITHUB_RUNNER_TOKEN }}
      TF_VAR_github_runner_repo: ${{ secrets.TF_GITHUB_RUNNER_REPO }}
      PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_TOKEN }}

      - name: Configure Terraform
        run: |
          mkdir -p ~/.oci
          echo "$PRIVATE_KEY" > ~/.oci/oci_api_key.pem
          chmod 600 ~/.oci/oci_api_key.pem

      - name: Terraform Init
        run: terraform init -upgrade -lock=false

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        id: terraform-plan-output
        if: github.event.pull_request.base.ref == 'main'
        run: terraform plan -input=false -lock=false -no-color

      - name: Update PR outpout
        uses: actions/github-script@v6
        if: github.event.pull_request.base.ref == 'main'
        id: plan-comment
        env:
          PLAN: ${{ steps.terraform-plan-output.outputs.stdout }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const output = `# Terraform Cloud Plan Output :rocket:
              <details>
              <summary>Terraform plan output</summary>
              <pre>
              ${process.env.PLAN}
              </pre>
              </details>`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      - name: Fail of terraform plan feedback
        if: steps.terraform-plan-output.conclusion == 'failure'
        run: |
          echo "Terraform plan failed"
          exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false -lock=false
